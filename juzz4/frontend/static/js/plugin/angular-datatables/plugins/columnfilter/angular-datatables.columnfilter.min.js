"undefined"!=typeof module&&"undefined"!=typeof exports&&module.exports===exports&&(module.exports="datatables.columnfilter"),function(window,document,$,angular){"use strict";function dtColumnFilterConfig($provide){function dtOptionsBuilderDecorator($delegate){function _decorateOptions(fn,params){function withColumnFilter(columnFilterOptions){return options.hasColumnFilter=!0,columnFilterOptions&&(options.columnFilterOptions=columnFilterOptions),options}var options=fn(params);return options.withColumnFilter=withColumnFilter,options}var newOptions=$delegate.newOptions,fromSource=$delegate.fromSource,fromFnPromise=$delegate.fromFnPromise;return $delegate.newOptions=function(){return _decorateOptions(newOptions)},$delegate.fromSource=function(ajax){return _decorateOptions(fromSource,ajax)},$delegate.fromFnPromise=function(fnPromise){return _decorateOptions(fromFnPromise,fnPromise)},$delegate}$provide.decorator("DTOptionsBuilder",dtOptionsBuilderDecorator),dtOptionsBuilderDecorator.$inject=["$delegate"]}function initColumnFilterPlugin(DTRendererService){function postRender(options,result){options&&options.hasColumnFilter&&result.dataTable.columnFilter(options.columnFilterOptions)}var columnFilterPlugin={postRender:postRender};DTRendererService.registerPlugin(columnFilterPlugin)}angular.module("datatables.columnfilter",["datatables"]).config(dtColumnFilterConfig).run(initColumnFilterPlugin),dtColumnFilterConfig.$inject=["$provide"],initColumnFilterPlugin.$inject=["DTRendererService"]}(window,document,jQuery,angular);