"undefined"!=typeof module&&"undefined"!=typeof exports&&module.exports===exports&&(module.exports="datatables.light-columnfilter"),function(window,document,$,angular){"use strict";function dtLightColumnFilterConfig($provide){function dtOptionsBuilderDecorator($delegate){function _decorateOptions(fn,params){function withLightColumnFilter(lightColumnFilterOptions){return options.hasLightColumnFilter=!0,lightColumnFilterOptions&&(options.lightColumnFilterOptions=lightColumnFilterOptions),options}var options=fn(params);return options.withLightColumnFilter=withLightColumnFilter,options}var newOptions=$delegate.newOptions,fromSource=$delegate.fromSource,fromFnPromise=$delegate.fromFnPromise;return $delegate.newOptions=function(){return _decorateOptions(newOptions)},$delegate.fromSource=function(ajax){return _decorateOptions(fromSource,ajax)},$delegate.fromFnPromise=function(fnPromise){return _decorateOptions(fromFnPromise,fnPromise)},$delegate}$provide.decorator("DTOptionsBuilder",dtOptionsBuilderDecorator),dtOptionsBuilderDecorator.$inject=["$delegate"]}function initLightColumnFilterPlugin(DTRendererService){function postRender(options,result){options&&options.hasLightColumnFilter&&new $.fn.dataTable.ColumnFilter(result.DataTable,options.lightColumnFilterOptions)}var lightColumnFilterPlugin={postRender:postRender};DTRendererService.registerPlugin(lightColumnFilterPlugin)}angular.module("datatables.light-columnfilter",["datatables"]).config(dtLightColumnFilterConfig).run(initLightColumnFilterPlugin),dtLightColumnFilterConfig.$inject=["$provide"],initLightColumnFilterPlugin.$inject=["DTRendererService"]}(window,document,jQuery,angular);