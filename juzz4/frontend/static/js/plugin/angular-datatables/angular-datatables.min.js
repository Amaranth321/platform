"undefined"!=typeof module&&"undefined"!=typeof exports&&module.exports===exports&&(module.exports="datatables"),function(window,document,$,angular){"use strict";function dataTable($q,$http,DTRendererFactory,DTRendererService,DTPropertyUtil){function compileDirective(tElm){var _staticHTML=tElm[0].innerHTML;return function($scope,$elem,iAttrs,ctrl){function handleChanges(newVal,oldVal){newVal!==oldVal&&ctrl.render($elem,ctrl.buildOptionsPromise(),_staticHTML)}var watchFunction=iAttrs.dtDisableDeepWatchers?"$watchCollection":"$watch";angular.forEach(["dtColumns","dtColumnDefs","dtOptions"],function(tableDefField){$scope[watchFunction].call($scope,tableDefField,handleChanges,!0)}),DTRendererService.showLoading($elem,$scope),ctrl.render($elem,ctrl.buildOptionsPromise(),_staticHTML)}}function ControllerDirective($scope){function buildOptionsPromise(){var defer=$q.defer();return $q.all([$q.when($scope.dtOptions),$q.when($scope.dtColumns),$q.when($scope.dtColumnDefs)]).then(function(results){var dtOptions=results[0],dtColumns=results[1],dtColumnDefs=results[2];DTPropertyUtil.deleteProperty(dtOptions,"$promise"),DTPropertyUtil.deleteProperty(dtColumns,"$promise"),DTPropertyUtil.deleteProperty(dtColumnDefs,"$promise");var options;if(angular.isDefined(dtOptions)&&(options={},angular.extend(options,dtOptions),angular.isArray(dtColumns)&&(options.aoColumns=dtColumns),angular.isArray(dtColumnDefs)&&(options.aoColumnDefs=dtColumnDefs),options.language&&options.language.url)){var languageDefer=$q.defer();$http.get(options.language.url).success(function(language){languageDefer.resolve(language)}),options.language=languageDefer.promise}return DTPropertyUtil.resolveObjectPromises(options,["data","aaData","fnPromise"])}).then(function(options){defer.resolve(options)}),defer.promise}function render($elem,optionsPromise,staticHTML){optionsPromise.then(function(options){DTRendererService.preRender(options);var isNgDisplay=$scope.datatable&&"ng"===$scope.datatable;_dtInstance&&_dtInstance._renderer?_dtInstance._renderer.withOptions(options).render($elem,$scope,staticHTML).then(function(dtInstance){_dtInstance=dtInstance,_setDTInstance(dtInstance)}):DTRendererFactory.fromOptions(options,isNgDisplay).render($elem,$scope,staticHTML).then(function(dtInstance){_dtInstance=dtInstance,_setDTInstance(dtInstance)})})}function _setDTInstance(dtInstance){angular.isFunction($scope.dtInstance)?$scope.dtInstance(dtInstance):angular.isDefined($scope.dtInstance)&&($scope.dtInstance=dtInstance)}var _dtInstance,vm=this;vm.buildOptionsPromise=buildOptionsPromise,vm.render=render}return compileDirective.$inject=["tElm"],ControllerDirective.$inject=["$scope"],{restrict:"A",scope:{dtOptions:"=",dtColumns:"=",dtColumnDefs:"=",datatable:"@",dtInstance:"="},compile:compileDirective,controller:ControllerDirective}}function dtOptionsBuilder(){var DTOptions={hasOverrideDom:!1,withOption:function(key,value){return angular.isString(key)&&(this[key]=value),this},withSource:function(ajax){return this.ajax=ajax,this},withDataProp:function(sAjaxDataProp){return this.sAjaxDataProp=sAjaxDataProp,this},withFnServerData:function(fn){if(!angular.isFunction(fn))throw new Error("The parameter must be a function");return this.fnServerData=fn,this},withPaginationType:function(sPaginationType){if(!angular.isString(sPaginationType))throw new Error("The pagination type must be provided");return this.sPaginationType=sPaginationType,this},withLanguage:function(language){return this.language=language,this},withLanguageSource:function(languageSource){return this.withLanguage({url:languageSource})},withDisplayLength:function(iDisplayLength){return this.iDisplayLength=iDisplayLength,this},withFnPromise:function(fnPromise){return this.fnPromise=fnPromise,this},withDOM:function(dom){return this.dom=dom,this}};return{newOptions:function(){return Object.create(DTOptions)},fromSource:function(ajax){var options=Object.create(DTOptions);return options.ajax=ajax,options},fromFnPromise:function(fnPromise){var options=Object.create(DTOptions);return options.fnPromise=fnPromise,options}}}function dtColumnBuilder(){var DTColumn={withOption:function(key,value){return angular.isString(key)&&(this[key]=value),this},withTitle:function(sTitle){return this.sTitle=sTitle,this},withClass:function(sClass){return this.sClass=sClass,this},notVisible:function(){return this.bVisible=!1,this},notSortable:function(){return this.bSortable=!1,this},renderWith:function(mRender){return this.mRender=mRender,this}};return{newColumn:function(mData,sTitle){if(angular.isUndefined(mData))throw new Error('The parameter "mData" is not defined!');var column=Object.create(DTColumn);return column.mData=mData,angular.isDefined(sTitle)&&(column.sTitle=sTitle),column},DTColumn:DTColumn}}function dtColumnDefBuilder(DTColumnBuilder){return{newColumnDef:function(targets){if(angular.isUndefined(targets))throw new Error('The parameter "targets" must be defined! See https://datatables.net/reference/option/columnDefs.targets');var column=Object.create(DTColumnBuilder.DTColumn);return angular.isArray(targets)?column.aTargets=targets:column.aTargets=[targets],column}}}function dtLoadingTemplate($compile,DTDefaultOptions){return{compileHtml:function($scope){return $compile(angular.element(DTDefaultOptions.loadingTemplate))($scope)}}}function dtInstanceFactory(){function newDTInstance(renderer){var dtInstance=Object.create(DTInstance);return dtInstance._renderer=renderer,dtInstance}function copyDTProperties(result,dtInstance){dtInstance.id=result.id,dtInstance.DataTable=result.DataTable,dtInstance.dataTable=result.dataTable}function reloadData(callback,resetPaging){this._renderer.reloadData(callback,resetPaging)}function changeData(data){this._renderer.changeData(data)}function rerender(){this._renderer.rerender()}var DTInstance={reloadData:reloadData,changeData:changeData,rerender:rerender};return{newDTInstance:newDTInstance,copyDTProperties:copyDTProperties}}function initAngularDataTables(){$.fn.DataTable.Api&&$.fn.DataTable.Api.register("ngDestroy()",function(remove){return remove=remove||!1,this.iterator("table",function(settings){var ien,orig=settings.nTableWrapper.parentNode,classes=settings.oClasses,table=settings.nTable,tbody=settings.nTBody,thead=settings.nTHead,tfoot=settings.nTFoot,jqTable=$(table),jqTbody=$(tbody),jqWrapper=$(settings.nTableWrapper),rows=$.map(settings.aoData,function(r){return r.nTr});settings.bDestroying=!0,$.fn.DataTable.ext.internal._fnCallbackFire(settings,"aoDestroyCallback","destroy",[settings]),remove||new $.fn.DataTable.Api(settings).columns().visible(!0),jqWrapper.unbind(".DT").find(":not(tbody *)").unbind(".DT"),$(window).unbind(".DT-"+settings.sInstance),table!==thead.parentNode&&(jqTable.children("thead").detach(),jqTable.append(thead)),tfoot&&table!==tfoot.parentNode&&(jqTable.children("tfoot").detach(),jqTable.append(tfoot)),jqTable.detach(),jqWrapper.detach(),settings.aaSorting=[],settings.aaSortingFixed=[],$.fn.DataTable.ext.internal._fnSortingClasses(settings),$(rows).removeClass(settings.asStripeClasses.join(" ")),$("th, td",thead).removeClass(classes.sSortable+" "+classes.sSortableAsc+" "+classes.sSortableDesc+" "+classes.sSortableNone),settings.bJUI&&($("th span."+classes.sSortIcon+", td span."+classes.sSortIcon,thead).detach(),$("th, td",thead).each(function(){var wrapper=$("div."+classes.sSortJUIWrapper,this);$(this).append(wrapper.contents()),wrapper.detach()})),!remove&&orig&&(orig.contains(settings.nTableReinsertBefore)?orig.insertBefore(table,settings.nTableReinsertBefore):orig.appendChild(table)),jqTable.css("width",settings.sDestroyWidth).removeClass(classes.sTable),ien=settings.asDestroyStripes.length,ien&&jqTbody.children().each(function(i){$(this).addClass(settings.asDestroyStripes[i%ien])});var idx=$.inArray(settings,$.fn.DataTable.settings);idx!==-1&&$.fn.DataTable.settings.splice(idx,1)})})}function dtDefaultOptions(){function setLoadingTemplate(loadingTemplate){return options.loadingTemplate=loadingTemplate,options}function setLanguageSource(sLanguageSource){return $.ajax({dataType:"json",url:sLanguageSource,success:function(json){$.extend(!0,$.fn.dataTable.defaults,{oLanguage:json})}}),options}function setLanguage(oLanguage){return $.extend(!0,$.fn.dataTable.defaults,{oLanguage:oLanguage}),options}function setDisplayLength(iDisplayLength){return $.extend($.fn.dataTable.defaults,{iDisplayLength:iDisplayLength}),options}function setBootstrapOptions(oBootstrapOptions){return options.bootstrapOptions=oBootstrapOptions,options}var options={loadingTemplate:'<h3 class="dt-loading">Loading...</h3>',bootstrapOptions:{},setLoadingTemplate:setLoadingTemplate,setLanguageSource:setLanguageSource,setLanguage:setLanguage,setDisplayLength:setDisplayLength,setBootstrapOptions:setBootstrapOptions};return options}function dtRendererService(DTLoadingTemplate){function showLoading($elem,$scope){var $loading=angular.element(DTLoadingTemplate.compileHtml($scope));$elem.after($loading),$elem.hide(),$loading.show()}function hideLoading($elem){$elem.show(),$elem.next().remove()}function renderDataTable($elem,options){var dtId="#"+$elem.attr("id");$.fn.dataTable.isDataTable(dtId)&&angular.isObject(options)&&(options.destroy=!0);var DT=$elem.DataTable(options),dt=$elem.dataTable(),result={id:$elem.attr("id"),DataTable:DT,dataTable:dt};return postRender(options,result),result}function hideLoadingAndRenderDataTable($elem,options){return rendererService.hideLoading($elem),rendererService.renderDataTable($elem,options)}function registerPlugin(plugin){plugins.push(plugin)}function postRender(options,result){angular.forEach(plugins,function(plugin){angular.isFunction(plugin.postRender)&&plugin.postRender(options,result)})}function preRender(options){angular.forEach(plugins,function(plugin){angular.isFunction(plugin.preRender)&&plugin.preRender(options)})}var plugins=[],rendererService={showLoading:showLoading,hideLoading:hideLoading,renderDataTable:renderDataTable,hideLoadingAndRenderDataTable:hideLoadingAndRenderDataTable,registerPlugin:registerPlugin,postRender:postRender,preRender:preRender};return rendererService}function dtRenderer(){return{withOptions:function(options){return this.options=options,this}}}function dtDefaultRenderer($q,DTRenderer,DTRendererService,DTInstanceFactory){function create(options){function render($elem,$scope){_$elem=$elem,_$scope=$scope;var dtInstance=DTInstanceFactory.newDTInstance(renderer),result=DTRendererService.hideLoadingAndRenderDataTable($elem,renderer.options);return _oTable=result.DataTable,DTInstanceFactory.copyDTProperties(result,dtInstance),$q.when(dtInstance)}function reloadData(){}function changeData(){}function rerender(){_oTable.destroy(),DTRendererService.showLoading(_$elem,_$scope),render(_$elem)}var _oTable,_$elem,_$scope,renderer=Object.create(DTRenderer);return renderer.name="DTDefaultRenderer",renderer.options=options,renderer.render=render,renderer.reloadData=reloadData,renderer.changeData=changeData,renderer.rerender=rerender,renderer}return{create:create}}function dtNGRenderer($log,$q,$compile,$timeout,DTRenderer,DTRendererService,DTInstanceFactory){function create(options){function render($elem,$scope,staticHTML){_staticHTML=staticHTML,_$elem=$elem,_parentScope=$scope.$parent,dtInstance=DTInstanceFactory.newDTInstance(renderer);var defer=$q.defer(),_expression=$elem.find("tbody").html(),_match=_expression.match(/^\s*.+?\s+in\s+(\S*)\s*/m);if(!_match)throw new Error('Expected expression in form of "_item_ in _collection_[ track by _id_]" but got "{0}".',_expression);var _ngRepeatAttr=_match[1],_alreadyRendered=!1;return _parentScope.$watchCollection(_ngRepeatAttr,function(){_oTable&&_alreadyRendered&&_destroyAndCompile(),$timeout(function(){_alreadyRendered=!0,DTRendererService.preRender(renderer.options);var result=DTRendererService.hideLoadingAndRenderDataTable(_$elem,renderer.options);_oTable=result.DataTable,DTInstanceFactory.copyDTProperties(result,dtInstance),defer.resolve(dtInstance)},0,!1)},!0),defer.promise}function reloadData(){$log.warn("The Angular Renderer does not support reloading data. You need to do it directly on your model")}function changeData(){$log.warn("The Angular Renderer does not support changing the data. You need to change your model directly.")}function rerender(){_destroyAndCompile(),DTRendererService.showLoading(_$elem,_parentScope),$timeout(function(){var result=DTRendererService.hideLoadingAndRenderDataTable(_$elem,renderer.options);_oTable=result.DataTable,DTInstanceFactory.copyDTProperties(result,dtInstance)},0,!1)}function _destroyAndCompile(){_newParentScope&&_newParentScope.$destroy(),_oTable.ngDestroy(),_$elem.html(_staticHTML),_newParentScope=_parentScope.$new(),$compile(_$elem.contents())(_newParentScope)}var _staticHTML,_oTable,_$elem,_parentScope,_newParentScope,dtInstance,renderer=Object.create(DTRenderer);return renderer.name="DTNGRenderer",renderer.options=options,renderer.render=render,renderer.reloadData=reloadData,renderer.changeData=changeData,renderer.rerender=rerender,renderer}return{create:create}}function dtPromiseRenderer($q,$timeout,$log,DTRenderer,DTRendererService,DTInstanceFactory){function create(options){function render($elem,$scope){var defer=$q.defer();return dtInstance=DTInstanceFactory.newDTInstance(renderer),_$elem=$elem,_$scope=$scope,_resolve(renderer.options.fnPromise,DTRendererService.renderDataTable).then(function(result){_oTable=result.DataTable,DTInstanceFactory.copyDTProperties(result,dtInstance),defer.resolve(dtInstance)}),defer.promise}function reloadData(callback,resetPaging){var previousPage=_oTable&&_oTable.page()?_oTable.page():0;angular.isFunction(renderer.options.fnPromise)?_resolve(renderer.options.fnPromise,_redrawRows).then(function(result){angular.isFunction(callback)&&callback(result.DataTable.data()),resetPaging===!1&&result.DataTable.page(previousPage).draw(!1)}):$log.warn("In order to use the reloadData functionality with a Promise renderer, you need to provide a function that returns a promise.")}function changeData(fnPromise){renderer.options.fnPromise=fnPromise,_$scope.dtOptions.fnPromise=fnPromise,_resolve(renderer.options.fnPromise,_redrawRows)}function rerender(){_oTable.destroy(),DTRendererService.showLoading(_$elem,_$scope),render(_$elem,_$scope)}function _resolve(fnPromise,callback){var defer=$q.defer();if(angular.isUndefined(fnPromise))throw new Error("You must provide a promise or a function that returns a promise!");return _loadedPromise?_loadedPromise.then(function(){defer.resolve(_startLoading(fnPromise,callback))}):defer.resolve(_startLoading(fnPromise,callback)),defer.promise}function _startLoading(fnPromise,callback){var defer=$q.defer();return _loadedPromise=angular.isFunction(fnPromise)?fnPromise():fnPromise,_loadedPromise.then(function(result){var data=result;if(renderer.options.sAjaxDataProp)for(var properties=renderer.options.sAjaxDataProp.split(".");properties.length;){var property=properties.shift();property in data&&(data=data[property])}_loadedPromise=null,defer.resolve(_doRender(renderer.options,_$elem,data,callback))}),defer.promise}function _doRender(options,$elem,data,callback){var defer=$q.defer();return delete data.$promise,options.aaData=data,$timeout(function(){DTRendererService.hideLoading($elem),options.bDestroy=!0,defer.resolve(callback($elem,options))},0,!1),defer.promise}function _redrawRows($elem,options){return _oTable.clear(),_oTable.rows.add(options.aaData).draw(options.redraw),{id:dtInstance.id,DataTable:dtInstance.DataTable,dataTable:dtInstance.dataTable}}var _oTable,_$elem,_$scope,dtInstance,_loadedPromise=null,renderer=Object.create(DTRenderer);return renderer.name="DTPromiseRenderer",renderer.options=options,renderer.render=render,renderer.reloadData=reloadData,renderer.changeData=changeData,renderer.rerender=rerender,renderer}return{create:create}}function dtAjaxRenderer($q,$timeout,DTRenderer,DTRendererService,DT_DEFAULT_OPTIONS,DTInstanceFactory){function create(options){function render($elem,$scope){_$elem=$elem,_$scope=$scope;var defer=$q.defer(),dtInstance=DTInstanceFactory.newDTInstance(renderer);return angular.isUndefined(renderer.options.sAjaxDataProp)&&(renderer.options.sAjaxDataProp=DT_DEFAULT_OPTIONS.sAjaxDataProp),angular.isUndefined(renderer.options.aoColumns)&&(renderer.options.aoColumns=DT_DEFAULT_OPTIONS.aoColumns),_doRender(renderer.options,$elem).then(function(result){_oTable=result.DataTable,DTInstanceFactory.copyDTProperties(result,dtInstance),defer.resolve(dtInstance)}),defer.promise}function reloadData(callback,resetPaging){_oTable&&_oTable.ajax.reload(callback,resetPaging)}function changeData(ajax){renderer.options.ajax=ajax,_$scope.dtOptions.ajax=ajax}function rerender(){render(_$elem,_$scope)}function _doRender(options,$elem){var defer=$q.defer();return options.bDestroy=!0,_oTable&&(_oTable.destroy(),DTRendererService.showLoading(_$elem,_$scope),$elem.empty()),DTRendererService.hideLoading($elem),_shouldDeferRender(options)?$timeout(function(){defer.resolve(DTRendererService.renderDataTable($elem,options))},0,!1):defer.resolve(DTRendererService.renderDataTable($elem,options)),defer.promise}function _shouldDeferRender(options){return!(!angular.isDefined(options)||!angular.isDefined(options.dom))&&options.dom.indexOf("S")>=0}var _oTable,_$elem,_$scope,renderer=Object.create(DTRenderer);return renderer.name="DTAjaxRenderer",renderer.options=options,renderer.render=render,renderer.reloadData=reloadData,renderer.changeData=changeData,renderer.rerender=rerender,renderer}return{create:create}}function dtRendererFactory(DTDefaultRenderer,DTNGRenderer,DTPromiseRenderer,DTAjaxRenderer){function fromOptions(options,isNgDisplay){if(isNgDisplay){if(options&&options.serverSide)throw new Error("You cannot use server side processing along with the Angular renderer!");return DTNGRenderer.create(options)}if(angular.isDefined(options)){if(angular.isDefined(options.fnPromise)&&null!==options.fnPromise){if(options.serverSide)throw new Error("You cannot use server side processing along with the Promise renderer!");return DTPromiseRenderer.create(options)}return angular.isDefined(options.ajax)&&null!==options.ajax||angular.isDefined(options.ajax)&&null!==options.ajax?DTAjaxRenderer.create(options):DTDefaultRenderer.create(options)}return DTDefaultRenderer.create()}return{fromOptions:fromOptions}}function dtPropertyUtil($q){function overrideProperties(source,target){var result=angular.copy(source);if((angular.isUndefined(result)||null===result)&&(result={}),angular.isUndefined(target)||null===target)return result;if(angular.isObject(target))for(var prop in target)target.hasOwnProperty(prop)&&(result[prop]=overrideProperties(result[prop],target[prop]));else result=angular.copy(target);return result}function deleteProperty(obj,propertyName){angular.isObject(obj)&&delete obj[propertyName]}function resolveObjectPromises(obj,excludedPropertiesName){var defer=$q.defer(),promises=[],resolvedObj={},excludedProp=excludedPropertiesName||[];if(!angular.isObject(obj)||angular.isArray(obj))defer.resolve(obj);else{resolvedObj=angular.extend(resolvedObj,obj);for(var prop in resolvedObj)resolvedObj.hasOwnProperty(prop)&&$.inArray(prop,excludedProp)===-1&&(angular.isArray(resolvedObj[prop])?promises.push(resolveArrayPromises(resolvedObj[prop])):promises.push($q.when(resolvedObj[prop])));$q.all(promises).then(function(result){var index=0;for(var prop in resolvedObj)resolvedObj.hasOwnProperty(prop)&&$.inArray(prop,excludedProp)===-1&&(resolvedObj[prop]=result[index++]);defer.resolve(resolvedObj)})}return defer.promise}function resolveArrayPromises(array){var defer=$q.defer(),promises=[],resolveArray=[];return angular.isArray(array)?(angular.forEach(array,function(item){angular.isObject(item)?promises.push(resolveObjectPromises(item)):promises.push($q.when(item))}),$q.all(promises).then(function(result){angular.forEach(result,function(item){resolveArray.push(item)}),defer.resolve(resolveArray)})):defer.resolve(array),defer.promise}return{overrideProperties:overrideProperties,deleteProperty:deleteProperty,resolveObjectPromises:resolveObjectPromises,resolveArrayPromises:resolveArrayPromises}}angular.module("datatables.directive",["datatables.instances","datatables.renderer","datatables.options","datatables.util"]).directive("datatable",dataTable),dataTable.$inject=["$q","$http","DTRendererFactory","DTRendererService","DTPropertyUtil"],angular.module("datatables.factory",[]).factory("DTOptionsBuilder",dtOptionsBuilder).factory("DTColumnBuilder",dtColumnBuilder).factory("DTColumnDefBuilder",dtColumnDefBuilder).factory("DTLoadingTemplate",dtLoadingTemplate),dtColumnDefBuilder.$inject=["DTColumnBuilder"],dtLoadingTemplate.$inject=["$compile","DTDefaultOptions"],angular.module("datatables.instances",["datatables.util"]).factory("DTInstanceFactory",dtInstanceFactory),angular.module("datatables",["datatables.directive","datatables.factory"]).run(initAngularDataTables),angular.module("datatables.options",[]).constant("DT_DEFAULT_OPTIONS",{dom:"lfrtip",sAjaxDataProp:"",aoColumns:[]}).service("DTDefaultOptions",dtDefaultOptions),angular.module("datatables.renderer",["datatables.instances","datatables.factory","datatables.options","datatables.instances"]).factory("DTRendererService",dtRendererService).factory("DTRenderer",dtRenderer).factory("DTDefaultRenderer",dtDefaultRenderer).factory("DTNGRenderer",dtNGRenderer).factory("DTPromiseRenderer",dtPromiseRenderer).factory("DTAjaxRenderer",dtAjaxRenderer).factory("DTRendererFactory",dtRendererFactory),dtRendererService.$inject=["DTLoadingTemplate"],dtDefaultRenderer.$inject=["$q","DTRenderer","DTRendererService","DTInstanceFactory"],dtNGRenderer.$inject=["$log","$q","$compile","$timeout","DTRenderer","DTRendererService","DTInstanceFactory"],dtPromiseRenderer.$inject=["$q","$timeout","$log","DTRenderer","DTRendererService","DTInstanceFactory"],dtAjaxRenderer.$inject=["$q","$timeout","DTRenderer","DTRendererService","DT_DEFAULT_OPTIONS","DTInstanceFactory"],dtRendererFactory.$inject=["DTDefaultRenderer","DTNGRenderer","DTPromiseRenderer","DTAjaxRenderer"],angular.module("datatables.util",[]).factory("DTPropertyUtil",dtPropertyUtil),dtPropertyUtil.$inject=["$q"]}(window,document,jQuery,angular);